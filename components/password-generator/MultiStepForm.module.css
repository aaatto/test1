/* File: components/password-generator/MultiStepForm.module.css (Verified) */

/* Card Styles */
.card {
    background-color: var(--card-bg);
    color: var(--card-text);
    border: 1px solid var(--border-color);
    border-radius: var(--radius-lg);
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    width: 100%;
    max-width: 40rem; /* Adjusted max width */
    margin: auto; /* Center the card */
}
.cardHeader {
    padding: 1.5rem;
    border-bottom: 1px solid var(--border-color);
}
.cardTitle {
    font-size: 1.25rem;
    font-weight: 600;
    letter-spacing: -0.025em;
}
.cardDescription {
    font-size: 0.875rem;
    color: var(--text-muted-color);
    margin-top: 0.25rem;
}
.cardContent {
    padding: 1.5rem;
    min-height: 250px; /* Ensure minimum height */
    display: flex;
    flex-direction: column;
    gap: 1.5rem; /* Spacing between form elements */
}
.cardFooter {
    padding: 1rem 1.5rem;
    border-top: 1px solid var(--border-color);
    background-color: var(--muted-bg);
    border-bottom-left-radius: var(--radius-lg);
    border-bottom-right-radius: var(--radius-lg);
    display: flex;
    justify-content: space-between;
    align-items: center; /* Align buttons vertically */
}

/* Input, Label, Textarea Styles */
.label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
}
.input,
.textarea {
    display: block;
    width: 100%;
    padding: 0.5rem 0.75rem;
    font-size: 0.875rem;
    border: 1px solid var(--input-border);
    background-color: var(--input-bg);
    color: var(--input-text);
    border-radius: var(--radius-md);
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    height: 2.5rem; /* Consistent height */
}
.input[type="date"] { /* Specific styling for date input if needed */
    /* Add any specific date input styles here */
    min-height: 2.5rem; /* Ensure height */
}
.input:focus,
.textarea:focus {
    outline: none;
    border-color: var(--ring-color);
    box-shadow: 0 0 0 2px rgba(139, 92, 246, 0.4); /* Ring effect */
}
.textarea {
    min-height: 80px;
    height: auto; /* Allow textarea to grow */
    resize: vertical;
}
.inputDescription { /* For helper text below inputs */
    font-size: 0.75rem;
    color: var(--text-muted-color);
    margin-top: 0.25rem;
}

/* Progress Bar Styles */
.progressBar {
    position: relative;
    height: 0.5rem; /* h-2 */
    width: 100%;
    overflow: hidden;
    border-radius: 9999px; /* rounded-full */
    background-color: var(--muted-bg);
    margin-bottom: 1rem; /* Add space below */
}
.progressIndicator {
    height: 100%;
    width: 100%;
    flex: 1;
    background-color: var(--primary-color); /* Purple progress */
    transition: transform 0.4s ease; /* Smoother transition */
}

/* Radio Group Styles */
.radioGroup {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}
.radioItem {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    font-size: 0.875rem;
}
.radioPrimitive { /* The actual circle */
    height: 1rem;
    width: 1rem;
    flex-shrink: 0;
    border-radius: 9999px;
    border: 2px solid var(--input-border); /* Slightly thicker border */
    display: flex;
    align-items: center;
    justify-content: center;
    transition: border-color 0.2s ease;
}
/* Style when the associated hidden input is checked */
.radioItem input:checked + .radioPrimitive {
    border-color: var(--primary-color); /* Purple border when checked */
}
.radioIndicator { /* Inner dot */
    display: flex;
    align-items: center;
    justify-content: center;
}
.radioIndicator svg {
    height: 0.625rem;
    width: 0.625rem;
    fill: var(--primary-color);
}
/* Hide actual radio input */
.radioItem input[type="radio"] {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
}

/* MultiStepForm Specific Styles */
.passwordTestElements {
    margin-bottom: 0.75rem;
    padding: 0.75rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius-md);
    background-color: var(--muted-bg);
    text-align: center;
    font-family: monospace;
    font-size: 0.875rem;
    word-spacing: 0.5rem; /* Add space between elements */
}
.reviewList {
    list-style: none; /* Remove default disc */
    padding: 0;
    font-size: 0.875rem;
    line-height: 1.6;
    max-height: 12rem; /* max-h-48 */
    overflow-y: auto;
    border: 1px solid var(--border-color);
    padding: 0.75rem 1rem;
    border-radius: var(--radius-md);
    background-color: rgba(var(--muted-bg), 0.5); /* Slightly transparent muted */
}
.reviewList li {
    margin-bottom: 0.35rem;
    padding-bottom: 0.35rem;
    border-bottom: 1px dashed var(--border-color); /* Separator */
    display: flex; /* Use flex for alignment */
    justify-content: space-between; /* Align label and value */
}
.reviewList li:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
    border-bottom: none;
}
.reviewList strong { /* Style label part */
    font-weight: 500;
    color: var(--text-muted-color);
    margin-right: 0.5rem;
    flex-shrink: 0; /* Prevent label from shrinking */
}
.reviewList .value { /* Style value part */
    font-weight: 500;
    text-align: right; /* Align value to the right */
    word-break: break-word; /* Allow long values to wrap */
}
.naValue { /* Style N/A */
    font-style: italic;
    color: var(--text-muted-color);
    font-weight: 400;
}

/* Results Display Styles */
.resultsLoading, .resultsError, .resultsSuccess {
    margin-top: 1.5rem;
    padding: 1.5rem;
    border: 1px solid var(--border-color);
    border-radius: var(--radius-lg);
    background-color: var(--card-bg);
    text-align: center;
}
.resultsError {
    background-color: rgba(239, 68, 68, 0.1);
    border-color: var(--destructive-color);
    color: var(--destructive-color);
}
.resultsError .button { margin-top: 1rem; }
.resultsSuccess h3 { font-size: 1.25rem; font-weight: 600; margin-bottom: 1rem; }
.resultsList { list-style: none; padding: 0; margin: 0; display: flex; flex-direction: column; gap: 0.5rem; }
.resultsList li { display: flex; align-items: center; justify-content: space-between; padding: 0.5rem 0.75rem; border: 1px solid var(--border-color); border-radius: var(--radius-md); background-color: var(--muted-bg); }
.resultsList span { font-family: monospace; font-size: 0.9rem; word-break: break-all; margin-right: 0.5rem; color: var(--text-color); }
.copyButton { /* Specific class for copy button */
    height: 1.75rem; width: 1.75rem; flex-shrink: 0; padding: 0; background: none; border: none; color: var(--text-muted-color); cursor: pointer; transition: color 0.2s ease;
}
.copyButton:hover { color: var(--primary-color); }
.copyButton svg { height: 0.9rem; width: 0.9rem; }
.resultsResetButton { margin-top: 1.5rem; }

/* Button Styles (Scoped within this module) */
.button { display: inline-flex; align-items: center; justify-content: center; white-space: nowrap; border-radius: var(--radius-md); font-size: 0.875rem; font-weight: 500; border: 1px solid transparent; cursor: pointer; transition: all 0.2s ease-in-out; padding: 0.5rem 1rem; height: 2.5rem; user-select: none; }
.button:focus-visible { outline: 2px solid var(--ring-color); outline-offset: 2px; }
.button:disabled { opacity: 0.5; pointer-events: none; }
.buttonPrimary { background-color: var(--primary-color); color: var(--primary-text-color); }
.buttonPrimary:hover:not(:disabled) { opacity: 0.9; }
.buttonOutline { background-color: transparent; border-color: var(--input-border); color: var(--text-color); }
.buttonOutline:hover:not(:disabled) { background-color: var(--accent-bg); color: var(--accent-text); }
.buttonSecondary { background-color: var(--secondary-color); color: var(--secondary-text-color); }
.buttonSecondary:hover:not(:disabled) { opacity: 0.9; }
.buttonSm { height: 2.25rem; padding: 0.25rem 0.75rem; font-size: 0.875rem; }
.button svg { height: 1rem; width: 1rem; }
.button svg:first-child:not(:last-child) { margin-right: 0.5rem; }
.button svg:last-child:not(:first-child) { margin-left: 0.5rem; }

